#!/usr/bin/env node
/**
 *
 */

var p = console.log;

var assert = require('assert-plus');
var dashdash = require('dashdash');
var format = require('util').format;
var fs = require('fs');
var glob = require('glob');
var path = require('path');
var rimraf = require('rimraf');



// ---- globals

var DEFAULT_PATTERNS = [
    '**/example',
    '**/examples',
    '**/test',
    '**/tests',
    '**/doc',
    '**/man',
    '**/.travis.yml'
];


// ---- internal support stuff

function ayfkm(opts, cb) {
    assert.string(opts.dir, 'opts.dir');

    var dir = path.resolve(opts.dir);
    if (! fs.existsSync(dir)) {
        throw new Error(format('"%s" does not exist', opts.dir));
    }

    // XXX bail if opts.dir isn't a node_modules

    var patterns = DEFAULT_PATTERNS;
    for (var i = 0; i < patterns.length; i++) {
        var pattern = patterns[i];
        var files = glob.sync(pattern, {cwd: dir});
        for (var j = 0; j < files.length; j++) {
            p('rm %s', path.join(opts.dir, files[j]));
            rimraf.sync(path.join(dir, files[j]));
        }
    }
}



// ---- mainline

function main(argv) {
    var options = [
        {
            name: 'version',
            type: 'bool',
            help: 'Print tool version and exit.'
        },
        {
            names: ['help', 'h'],
            type: 'bool',
            help: 'Print this help and exit.'
        },
        {
            names: ['verbose', 'v'],
            type: 'bool',
            help: 'Verbose output.'
        }
    ];

    var parser = dashdash.createParser({options: options});
    try {
        var opts = parser.parse(argv);
    } catch (e) {
        console.error('tabula: error: %s', e.message);
        process.exit(1);
    }

    if (opts.help) {
        var help = parser.help({includeEnv: true}).trimRight();
        p('usage:\n'
            + '    aykfm [<options>]\n'
            + '\n'
            + 'options:\n'
            + help);
        process.exit(0);
    } else if (opts.version) {
        var pkg = require('../package.json');
        p('ayfkm ' + pkg.version);
        p(pkg.homepage);
        process.exit(0);
    }

    ayfkm({dir: './node_modules'}, function (err) {
        if (err) {
            console.error('ayfkm: error: %s',
                opts.verbose ? err.stack : err.message);
            process.exit(1);
        }
        process.exit(0);
    });
}


if (require.main === module) {
    main(process.argv);
}
